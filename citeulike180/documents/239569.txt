Service-Oriented Science Ian Foster, et al. Science 308, 814 (2005); DOI: 10.1126/science.1110411

The following resources related to this article are available online at www.sciencemag.org (this information is current as of May 7, 2008 ):
Updated information and services, including high-resolution figures, can be found in the online version of this article at: http://www.sciencemag.org/cgi/content/full/308/5723/814 A list of selected additional articles on the Science Web sites related to this article can be found at: http://www.sciencemag.org/cgi/content/full/308/5723/814#related-content This article cites 15 articles, 4 of which can be accessed for free: http://www.sciencemag.org/cgi/content/full/308/5723/814#otherarticles This article has been cited by 19 article(s) on the ISI Web of Science. This article has been cited by 3 articles hosted by HighWire Press; see: http://www.sciencemag.org/cgi/content/full/308/5723/814#otherarticles Information about obtaining reprints of this article or about obtaining permission to reproduce this article in whole or in part can be found at: http://www.sciencemag.org/about/permissions.dtl

Science (print ISSN 0036-8075; online ISSN 1095-9203) is published weekly, except the last week in December, by the American Association for the Advancement of Science, 1200 New York Avenue NW, Washington, DC 20005. Copyright 2005 by the American Association for the Advancement of Science; all rights reserved. The title Science is a registered trademark of AAAS.

Downloaded from www.sciencemag.org on May 7, 2008

DD S S T R BB U T E DCC O M P U T NN G I I TRI I UTED OMPUTI I G

S PECIAL S ECTION

VIEWPOINT

Service-Oriented Science
Ian Foster
New information architectures enable new approaches to publishing and accessing valuable data and programs. So-called service-oriented architectures define standard interfaces and protocols that allow developers to encapsulate information tools as services that clients can access without knowledge of, or control over, their internal workings. Thus, tools formerly accessible only to the specialist can be made available to all; previously manual data-processing and analysis tasks can be automated by having services access services. Such service-oriented approaches to science are already being applied successfully, in some cases at substantial scales, but much more effort is required before these approaches are applied routinely across many disciplines. Grid technologies can accelerate the development and adoption of service-oriented science by enabling a separation of concerns between disciplinespecific content and domain-independent software and hardware infrastructure. Paul ErdPs claimed that a mathematician is a machine for turning coffee into theorems. The scientist is arguably a machine for turning data into insight. However, advances in information technology are changing the way in which this role is fulfilled--by automating time-consuming activities and thus freeing the scientist to perform other tasks. In this Viewpoint, I discuss how service-oriented computing--technology that allows powerful information tools to be made available over the network, always on tap, and easy for scientists to use--may contribute to that evolution. The practice of science has, of course, already been affected dramatically by information technology and, in particular, by the Internet. For example, the hundreds of gigabytes of genome sequence available online means that for a growing number of biologists, Bdata[ is something that they find on the Web, not in the lab. Similarly, emerging Bdigital observatories[ Ealready several hundred terabytes in dozens of archives (1)^ allow astronomers to pose and answer in seconds questions that might previously have required years of observation. In fields such as cosmology and climate, supercomputer simulations have emerged as essential tools, themselves producing large data sets that, when published online, are of interest to many (2). An exploding number of sensors (3), the rapidly expanding computing and storage capabilities of federated Grids (4), and advances in optical networks (5) are accelerating these trends by making increasingly powerful capabilities available online. Sometimes, however, the thrill of the Web seems to blind us to the true implications of these developments. Human access to online resources is certainly highly useful, putting a global library at our fingertips. But ultimately, it
Mathematics and Computer Science Division, Argonne National Laboratory, Argonne, IL 60439, USA, and Department of Computer Science, University of Chicago, Chicago, IL 60637, USA. E-mail: foster@mcs.anl.gov

is automated access by software programs that will be truly revolutionary, simply because of the higher speeds at which programs can operate. In the time that a human user takes to locate one useful piece of information within a Web site, a program may access and integrate data from many sources and identify relationships that a human might never discover unaided. Two dramatic examples are systems that automatically integrate information from genome and protein sequence databases to infer metabolic pathways (6) and systems that search digital sky surveys to locate brown dwarfs (7). The key to such success is uniformity of interface, so that programs can discover and access services without the need to write custom code for each specific data source, program, or sensor. Electric power­transmission standards and infrastructure enabled development of the electric power grid and spurred the development of a plethora of electric tools. In a similar manner, service technologies enable the development of a wide range of programs that integrate across multiple existing services for purposes such as metabolic pathway reconstruction, categorization of astronomical objects, and analysis of environmental data. If such programs are themselves made accessible as services, the result can be the creation of distributed networks of services, each constructed by a different individual or group, and each providing some original content and/or value-added product (8). We see this evolution occurring in the commercial Internet. As the Web has expanded in scale, so the preferred means of finding things has evolved from Yahoo_s manually assembled lists to Google_s automatically computed indices. Now Google is making its indices accessible, spurring development of yet other services. What makes Google_s indices feasible is the existence of large quantities of data in a uniform format (HTML, HyperText Markup Language) and--two important factors that must be considered when we turn to science--smart VOL 308 SCIENCE

Creating and Sharing Services
Creating a service involves describing, in some conventional manner, the operations that the service supports; defining the protocol used to invoke those operations over the Internet; and operating a server to process incoming requests. A set of technologies called Web services (9) are gaining wide acceptance for these purposes. A variety of commercial and open-source Web services tools exist for developing services, deploying and operating services, and developing client applications. A fair amount of experience has been gained with the creation of services and applications in different science domains. Although problems remain (e.g., efficiency, interoperability of different vendor offerings), the technology is well beyond the experimental stage. Nevertheless, it can still be a big step to realize the full potential of serviceoriented science, for reasons that I now discuss. Interoperability. Services have little value if others cannot discover, access, and make sense of them. Yet, as Stein has observed (11), today's scientific communities too often resemble medieval Italy's collection of warring city states, each with its own legal system and dialect. Web services mechanisms for describing, discovering, accessing, and securing services provide a common alphabet, but a true lingua franca requires agreement on protocols, data formats, and ultimately semantics (12). For example, the definition of VOTable, a standard XML (eXtensible Markup Language)­ based representation for tabular data (13), has been a powerful force for progress in astronomy. Scale. Services must often deal with data volumes, computational demands, and numbers of users beyond the capacity of a typical PC. Responding to a user request--or to the arrival of new data--can involve large amounts of computation. For example, the Argonne GNARE system searches periodically through DNA and protein databases for new and updated genomes and then computes and pub-

814

6 MAY 2005

www.sciencemag.org

Downloaded from www.sciencemag.org on May 7, 2008

computer scientists to develop the algorithms and software required to manage the 100,000 computers used (at last count) to analyze Web link structure, and smart businesspeople to raise the money that pays for those computers! The term Bservice-oriented architecture[ refers to systems structured as networks of loosely coupled, communicating services (9). Thus, Bservice-oriented science[ refers to scientific research enabled by distributed networks of interoperating services. EThe term Be-Science,[ coined by John Taylor, has a similar but broader connotation (10).^

DISTRIBUTED COMPUTING

S PECIAL S ECTION
Downloaded from www.sciencemag.org on May 7, 2008

cialization so that being a service developer is oriented science realizes its promise of being a lishes derived values (14) (Fig. 1). Analysis as honorable as being an experimentalist or democratizing force, rather than increasing the of a single bacterial genome of 4000 sequences theorist. Intellectual property issues must also gap between the ``haves'' and ``have-nots''? by three bioinformatics tools (BLAST, PFAM, be addressed so that people feel comfortable Part of the solution is a familiar idea in and BLOCKS) requires 12,000 steps, each making data available freely. It is perhaps not commercial information technology, namely, taking on the order of 30 s of run time. GNARE surprising that astronomy has led the way in outsourcing. Building and deploying a service is able to perform these tasks in a timely fashion putting data online, given that its data have no require expertise and resources in three distinct only because it has access to distributed known commercial value. areas: (i) the domain-specific content--data, resources provided by two U.S. national-scale Scientists are certainly not alone in grapsoftware, and processes--that is to be shared; infrastructures, TeraGrid and Open Science pling with these challenges. However, science (ii) the domain-independent software functions Grid (see below). needed to operate and manThe impact of autoage the service and to mation on service load enable community access, must also be considered. such as membership serIt is improbable that even vices, registries, metadata a tiny fraction of the percatalogs, and workflow orhaps 500,000 biologists chestration services; and (iii) worldwide will decide to the physical resources-- access GenBank, GNARE, networks, storage, and or any other service at the computers--needed to host same time. However, it is content and functions. quite conceivable that The last two capabilities-- 50,000 ``agents'' operating functions and resources--can, on their behalf would do in principle, be handed off so--and that each such to specialist providers. If agent would want to gensuch specialists can deliver erate thousands of requests. resources or operate reManagement. In a quired functions for many networked world, any usecommunities, then (again, ful service will become in principle) economies of overloaded. Thus, we scale can be achieved, need to control who uses while scientists can focus services and for what puron what they are good at-- poses. Particularly valuproviding content and adable services may become vancing science. In adcommunity resources redition, individual services quiring coordinated mancan scale more easily and agement. Grid architectures efficiently when needed. and software--a set of To see how this strategy Web services technologies can work, consider the focused on distributed sysSourceForge system, which tem management--can provides hosting capaplay an important role in bilities for communities this regard (15). developing open-source Quality control. As software. A new openthe number and variety of services grow and inter- Fig. 1. What it can take to build a service. A powerful approach to the interpretation of newly source project is provided dependencies among ser- sequenced genomes is comparative analysis against all annotated sequences in publicly with access to code archivvices increase, it becomes available resources. Currently, the largest sequence database at the National Center for ing, mailing lists, and other important to automate pre- Biotechnology Information contains 2.3 million protein sequences. The precision of genetic related functions, as well as viously manual quality- sequence analysis and assignment of function to genes can be increased markedly by the use the hardware required to control processes--so that, of multiple bioinformatics algorithms for data analysis. The GNARE system discussed in the host those functions. This text precomputes analysis results for every sequence, finding protein similarities (BLAST), for example, users can de- protein family domains (BLOCKS), and structural characteristics. Grid resources are used to outsourcing of function and termine the provenance of run the resulting millions of processes, a task that must be repeated frequently owing to the resource is made possible a particular derived data exponentially growing amount of data. [Image credit: Bioinformatics group, Mathematics and by the existence of the Internet infrastructure along product (8, 16). The abil- Computer Science Division, Argonne National Laboratory] with standard Web servers, ity to associate metadata is perhaps unique in the scope and scale of its browsers, and associated protocols, which towith data and services can be important, as can problems, the number and diversity of potential gether allow users (in this case, open-source the ability to determine the identity of entities contributors, and the subtlety of the questions communities) to focus on providing content that assert metadata, so that consumers can that service networks can be used to answer. (code) while SourceForge runs Web servers and make their own decisions concerning quality. related infrastructure. Incentives. A scientist may work long Rethinking Infrastructure In a similar manner, a ``SourceForge hours in the lab to obtain results that may bring for science'' would both host scientific tenure, fame, or fortune. The same time spent As scale increases, creating, operating, and even communities--operating community memberdeveloping a service may not be so rewarded. accessing services become increasingly chalship services, catalogs, storage services, workWe need to change incentives and enable spelenging. How do we ensure that servicewww.sciencemag.org SCIENCE VOL 308 6 MAY 2005

815

DD S S T R BB U T E DCC O M P U T NN G I I TRI I UTED OMPUTI I G

S PECIAL S ECTION

Fig. 2. The Open Science Grid links storage and computing resources at more than 30 sites across the United States to support a variety of services and applications, many concerned with largescale data analysis. Circles show a subset of Open Science Grid sites; lines indicate communications, some with international partners. [Image credit: I. Legrand, Caltech]

flow orchestration services, and so forth--and provide access to the hardware resources required to operate both those functions and the application-specific services that constitute the communities ``content.'' In this case, the supporting infrastructure must provide a much richer set of capabilities than does SourceForge, encompassing, for example, access control, accounting, provisioning, and related management issues. As noted above, Grid architectures and software (15) address many of these concerns, allowing users to focus on providing ``content,'' which in this case comprises not just Web pages but also services, data, and programs. SourceForge's hardware requirements are not substantial and thus can easily be provided by a centralized system. However, ``cyberinfrastructure'' (17) to support scientific communities need not be centralized. For example, the Open Science Grid (OSG) collaboration has constructed a distributed ``Grid'' linking clusters at 30 sites across the United States that total thousands of computers and tens of terabytes of storage (18) (Fig. 2). The Enabling Grids for eScience in Europe project, EGEE, has a similar structure. Major research universities and national laboratories participate in OSG and EGEE, but so do smaller institutions, which can thus enhance educational and research opportunities. For example, Florida International University is an important OSG resource provider, thanks to its 92-processor Linux cluster. All participants can obtain access to large quantities of distributed storage and computational power when they need it. These systems are being used by researchers in

high-energy physics, biology, chemistry, radiology, and computer science. This separation of concerns also suggests new roles for campus information technology organizations. In addition to operating commodity services such as Internet and e-mail, these organizations can host functions and provide resources.

Approaches to Scaling
The many groups working to apply serviceoriented techniques to science are each exploring one or more of three different approaches to the problem of scaling. In the first, ``cookiecutter'' approach, researchers create dedicated domain-specific infrastructures, in which uniformity is enforced across the board, at the content, function, and resource level. Here, the community standardizes the domain-specific software--and often also the hardware--that participants must deploy in order to provide required functions and resources. I give three examples of such systems. The Biomedical Informatics Research Network, BIRN (19), is a National Institutes of Health initiative to facilitate collaboration in the biomedical sciences. BIRN has deployed standard compute and storage clusters at 19 sites across the United States. These systems, plus various functions such as catalogs and ontologies, support a variety of collaborative research programs in areas such as mouse brain morphology (20). The National Science Foundation's Network for Earthquake Engineering Simulation, NEES, is a national collaboratory enabling commuVOL 308 SCIENCE

nity access to specialized instrument, data, and simulation resources for earthquake engineering. Each of its 17 instrument sites runs a NEES Point of Presence (a modest PC with a standard hardware configuration) with standard software enabling teleobservation, teleoperation, data collection, and related functions. Central services include catalogs and data archives. NEES has already enabled unique distributed experiments involving facilities at multiple sites (21). The PlanetLab computer science testbed is a collection of several hundred PCs at universities and research laboratories worldwide, each with a standard configuration and each running standard software (22). Computer scientists can obtain access to ``slices'' on distributed collections of these PCs, on which they can deploy and evaluate experimental distributed services. Pushing the electric power grid analogy perhaps farther than we should, cookie-cutter approaches give each participant their own electricity generator. This strategy has the advantage of achieving a high degree of central control and thus uniformity. On the other hand, the cost of expanding capability is high, requiring the acquisition and deployment of new hardware. In the second, more bottom-up approach, researchers develop service ecologies in which agreements on interfaces allow participants to provide content and function in any way they see fit. I referred above to the international virtual observatory community's VOTable format and to work in bioinformatics. The Department of Energy's Earth System Grid, ESG (2), is another example of a discipline-specific service that emphasizes the definition and implementation of standard interfaces. Building on the widely used OPeNDAP protocol for publishing and accessing environmental data, ESG has deployed services that provide access to over 100 TB of climate simulation data from the National Center for Atmospheric Research's Community Climate Simulation Model and other models involved in the International Panel on Climate Change assessment. Many terabytes of data are downloaded from these services each month. As a second example, the UK myGrid project (8) has developed tools that allow biologists to define workflows that integrate information from multiple sources, including both biological databases and bioinformatics applications. These workflows can be archived and then run periodically to identify new phenomena of interest as, for example, in a recent study of Williams-Beuren syndrome (23). For a third example, the Department of Energy's Fusion Collaboratory (24) operates services that enable online access to simulation codes. By reducing barriers to use, these services are increasing use of advanced computational techniques. Project members have also demonstrated on-demand coupling of simulation capabilities with physical experiments.

816

6 MAY 2005

www.sciencemag.org

Downloaded from www.sciencemag.org on May 7, 2008

DISTRIBUTED COMPUTING

S PECIAL S ECTION

Continuing the electric power grid analogy, such service ecologies define relevant standards but leave each site to acquire and configure its own equipment. This approach has the advantage that the cost of entry can be low, particularly if appropriate software is available. On the other hand, individual service providers have no immediate means of scaling capability beyond acquiring more hardware. The third approach involves the definition and deployment of general-purpose infrastructures that deliver discipline-independent resources or functions. I have already mentioned OSG and EGEE. As a third example, the National Science Foundation's TeraGrid links resources at nine sites across the United States, with each site deploying a common software distribution that permits secure remote access to computers and storage systems, monitoring of system components, accounting for usage, and so on. TeraGrid targets not only high-end ``power users'' but also the larger community through the deployment of ``science gateways,'' discipline-specific services hosted on TeraGrid in support of specific communities. General-purpose infrastructures can be compared with power plants, which operate to provide electricity to any consumer connected to the electric power grid. Like power plants, they have the potential to achieve economies of scale but also must grapple with the challenges of supporting many users with diverse requirements. In addition to these national or transnational efforts, many university campuses are deploying ``campus Grids'' to support faculty and students. For example, Purdue University's NanoHub provides students and faculty with access to various applications, while the UCLA Grid federates multiple clusters across campus and provides online access to popular simulation codes. These projects, and many others like them, are important experiments in the policies, organizational structures, and mechanisms

required to realize service-oriented science. Elements of all three approaches will be required if we are to achieve broad adoption. In particular, it cannot be efficient for every scientist and community to become a service provider. Instead, individual communities-- especially smaller communities--should be able to outsource selected functions and physical resources, thus allowing them to focus on developing their domain-specific content. The successful creation and operation of the service providers that support this outsourcing require both Grid infrastructure software and organizational and funding structures that expose real costs so that ``build versus buy'' decisions can be made in an informed manner.

Summary
Service-oriented science has the potential to increase individual and collective scientific productivity by making powerful information tools available to all, and thus enabling the widespread automation of data analysis and computation. Ultimately, we can imagine a future in which a community's shared understanding is no longer documented exclusively in the scientific literature but is documented also in the various databases and programs that represent--and automatically maintain and evolve--a collective knowledge base. Service-oriented science is also a new way of doing business, with implications for all aspects of the scientific enterprise. Students and researchers must acquire new skills to build and use services. New cyberinfrastructure is required to host services, especially as demand increases. Policies governing access to services must evolve. Above all, much hard work must be done in both disciplinary science and information technology in order to develop the understanding needed for this potential to be fully exploited.
References and Notes
1. A. Szalay, J. Gray, Science 293, 2037 (2001). 2. D. Bernholdt et al., Proc. IEEE 93, 485 (2005).

10.1126/science.1110411

VIEWPOINT

Cyberinfrastructure for e-Science
Tony Hey and Anne E. Trefethen
Here we describe the requirements of an e-Infrastructure to enable faster, better, and different scientific research capabilities. We use two application exemplars taken from the United Kingdom's e-Science Programme to illustrate these requirements and make the case for a service-oriented infrastructure. We provide a brief overview of the UK ``plug-andplay composable services'' vision and the role of semantics in such an e-Infrastructure. It is no coincidence that it was at CERN, the particle physics accelerator laboratory in
Engineering and Physical Sciences Research Council, Polaris House, North Star Avenue, Swindon SN2 1ET, UK.

Geneva, that Tim Berners-Lee invented the World Wide Web. Given the distributed nature of the multi-institute collaborations required for modern particle physics experiments, researchers desperately needed a tool for exchanging information. After a slow start, SCIENCE VOL 308

the community enthusiastically adopted the Web for information exchange within their global experimental collaborations. Since its beginnings in the early 1990s, the Web has become an indispensable tool not just for the scientific world, but for the humanities, business, and recreation. Now, just a decade later, scientists are attempting to develop capabilities for collaboration that go far beyond those of the Web. Besides being able to access information from different sites, they want to be able to integrate, federate, and analyze infor-

www.sciencemag.org

6 MAY 2005

817

Downloaded from www.sciencemag.org on May 7, 2008

3. D. Culler, H. Mulder, Sci. Am. 290, 84 (June 2004). 4. I. Foster, Sci. Am. 288, 78 (April 2003). 5. T. DeFanti, C. de Laat, J. Mambretti, K. Neggers, B. St Arnaud, Commun. ACM 46, 34 (2003). 6. R. Overbeek et al., Nucleic Acids Res. 28, 123 (2000). 7. Z. Tsvetanov et al., Astrophys. J. 531, L61 (2000). 8. C. Goble, S. Pettifer, R. Stevens, in The Grid: Blueprint for a New Computing Infrastructure (Morgan Kaufmann, San Francisco, ed. 2, 2004), pp. 121­134. 9. D. Booth et al., Web Services Architecture (W3C, Working Draft, 2003; www.w3.org/TR/2003/WD-wsarch-20030808). 10. T. Hey, A. E. Trefethen, Science 308, 817 (2005). 11. L. Stein, Nature 317, 119 (2002). 12. T. Berners-Lee, J. Hendler, O. Lassila, Sci. Am. 284, 34 (May 2001). 13. F. Ochsenbein et al., VOTable Format Definition Version 1.1 (International Virtual Observatory Alliance, 2004; www.ivoa.net/Documents/latest/VOT.html). 14. D. Sulakhe et al., J. Clin. Monitor. Comput., in press. 15. I. Foster, C. Kesselman, J. Nick, S. Tuecke, IEEE Comput. 35, 37 (2002). 16. J. Myers, A. Chappell, M. Elder, A. Geist, J. Schwidder, IEEE Comput. Sci. Eng. 5, 44 (2003). 17. ``Revolutionizing Science and Engineering through Cyberinfrastructure: Report of the National Science Foundation Blue Ribbon Advisory Panel on Cyberinfrastructure'' (National Science Foundation, Washington, DC, 2003; www.communitytechnology.org/ nsf_ci_report). 18. I. Foster et al., in 13th IEEE International Symposium on High Performance Distributed Computing (IEEE, Los Alamitos, CA, 2004), pp. 236­245. 19. M. Ellisman, S. Peltier, in The Grid: Blueprint for a New Computing Infrastructure (Morgan Kaufmann, San Francisco, ed. 2, 2004), pp. 109­120. 20. M. Martone, A. Gupta, M. Ellisman, Nat. Neurosci. 7, 467 (2004). 21. L. Pearlman et al., in 13th IEEE Intl. Symp. on High Performance Distributed Computing (IEEE, Los Alamitos, CA, 2004), pp. 14­23. 22. A. Bavier et al., in 1st Symposium on Networked Systems Design and Implementation (Usenix, Berkeley, CA, 2004), pp. 253­266. 23. R. Stevens et al., Bioinformatics 20, (suppl. 1), i303 (2004). 24. K. Keahey et al., Future Generation Comput. Syst. 18, 1005 (2002). 25. I gratefully acknowledge helpful discussions with C. Catlett, C. Kesselman, M. Livny, A. Szalay, and R. Stevens. This work was supported in part by the Mathematical, Information, and Computational Sciences Division subprogram of the Office of Advanced Scientific Computing Research, Office of Science, U.S. Department of Energy, under Contract W-31-109Eng-38, and by the NSF. The author is Founder of and Chief Open Source Strategist at Univa Corporation.

